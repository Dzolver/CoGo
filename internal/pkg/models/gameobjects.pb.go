// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: gameobjects.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectID string `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty" bson:"_id, omitempty"`
	Uuid     string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty" bson:"uuid, omitempty"`
	UserId   string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" bson:"user_id, omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty" bson:"password, omitempty"`
	Active   int32  `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty" bson:"active, omitempty"`
	Logins   int32  `protobuf:"varint,6,opt,name=logins,proto3" json:"logins,omitempty" bson:"logins, omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *User) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetActive() int32 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *User) GetLogins() int32 {
	if x != nil {
		return x.Logins
	}
	return 0
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectID     string     `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty" bson:"_id, omitempty"`
	Uuid         string     `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty" bson:"uuid, omitempty"`
	Name         string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" bson:"name, omitempty"`
	Level        int32      `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty" bson:"level, omitempty"`
	Age          int32      `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty" bson:"age, omitempty"`
	Title        string     `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty" bson:"title, omitempty"`
	CurrentExp   float32    `protobuf:"fixed32,7,opt,name=current_exp,json=currentExp,proto3" json:"current_exp,omitempty" bson:"current_exp, omitempty"`
	TotalExp     float32    `protobuf:"fixed32,8,opt,name=total_exp,json=totalExp,proto3" json:"total_exp,omitempty" bson:"total_exp, omitempty"`
	MaxExp       float32    `protobuf:"fixed32,9,opt,name=max_exp,json=maxExp,proto3" json:"max_exp,omitempty" bson:"max_exp, omitempty"`
	RaceId       string     `protobuf:"bytes,10,opt,name=race_id,json=raceId,proto3" json:"race_id,omitempty" bson:"race_id, omitempty"`
	RaceName     string     `protobuf:"bytes,11,opt,name=race_name,json=raceName,proto3" json:"race_name,omitempty" bson:"race_name, omitempty"`
	ClassId      string     `protobuf:"bytes,12,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty" bson:"class_id, omitempty"`
	ClassName    string     `protobuf:"bytes,13,opt,name=class_name,json=className,proto3" json:"class_name,omitempty" bson:"class_name, omitempty"`
	LastPosition *Position  `protobuf:"bytes,14,opt,name=last_position,json=lastPosition,proto3" json:"last_position,omitempty" bson:"last_position, omitempty"`
	LastRegion   string     `protobuf:"bytes,15,opt,name=last_region,json=lastRegion,proto3" json:"last_region,omitempty" bson:"last_region, omitempty"`
	LastLevel    string     `protobuf:"bytes,16,opt,name=last_level,json=lastLevel,proto3" json:"last_level,omitempty" bson:"last_level, omitempty"`
	Items        *ItemRange `protobuf:"bytes,17,opt,name=items,proto3" json:"items,omitempty" bson:"items, omitempty"`
	Purse        *Purse     `protobuf:"bytes,18,opt,name=purse,proto3" json:"purse,omitempty" bson:"purse, omitempty"`
	Loadout      *Loadout   `protobuf:"bytes,19,opt,name=loadout,proto3" json:"loadout,omitempty" bson:"loadout, omitempty"`
	Stats        *Stats     `protobuf:"bytes,20,opt,name=stats,proto3" json:"stats,omitempty" bson:"stats, omitempty"`
	BaseStats    *Stats     `protobuf:"bytes,21,opt,name=base_stats,json=baseStats,proto3" json:"base_stats,omitempty" bson:"base_stats, omitempty"`
	SpellIndex   []string   `protobuf:"bytes,22,rep,name=spell_index,json=spellIndex,proto3" json:"spell_index,omitempty" bson:"spell_index, omitempty"`
	Description  string     `protobuf:"bytes,23,opt,name=description,proto3" json:"description,omitempty" bson:"description, omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{1}
}

func (x *Profile) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *Profile) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Profile) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Profile) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Profile) GetCurrentExp() float32 {
	if x != nil {
		return x.CurrentExp
	}
	return 0
}

func (x *Profile) GetTotalExp() float32 {
	if x != nil {
		return x.TotalExp
	}
	return 0
}

func (x *Profile) GetMaxExp() float32 {
	if x != nil {
		return x.MaxExp
	}
	return 0
}

func (x *Profile) GetRaceId() string {
	if x != nil {
		return x.RaceId
	}
	return ""
}

func (x *Profile) GetRaceName() string {
	if x != nil {
		return x.RaceName
	}
	return ""
}

func (x *Profile) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *Profile) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *Profile) GetLastPosition() *Position {
	if x != nil {
		return x.LastPosition
	}
	return nil
}

func (x *Profile) GetLastRegion() string {
	if x != nil {
		return x.LastRegion
	}
	return ""
}

func (x *Profile) GetLastLevel() string {
	if x != nil {
		return x.LastLevel
	}
	return ""
}

func (x *Profile) GetItems() *ItemRange {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Profile) GetPurse() *Purse {
	if x != nil {
		return x.Purse
	}
	return nil
}

func (x *Profile) GetLoadout() *Loadout {
	if x != nil {
		return x.Loadout
	}
	return nil
}

func (x *Profile) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Profile) GetBaseStats() *Stats {
	if x != nil {
		return x.BaseStats
	}
	return nil
}

func (x *Profile) GetSpellIndex() []string {
	if x != nil {
		return x.SpellIndex
	}
	return nil
}

func (x *Profile) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Loadout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head        string `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty" bson:"head, omitempty"`
	Body        string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty" bson:"body, omitempty"`
	Feet        string `protobuf:"bytes,3,opt,name=feet,proto3" json:"feet,omitempty" bson:"feet, omitempty"`
	Weapon      string `protobuf:"bytes,4,opt,name=weapon,proto3" json:"weapon,omitempty" bson:"weapon, omitempty"`
	Accessory_1 string `protobuf:"bytes,5,opt,name=accessory_1,json=accessory1,proto3" json:"accessory_1,omitempty" bson:"accessory_1, omitempty"`
	Accessory_2 string `protobuf:"bytes,6,opt,name=accessory_2,json=accessory2,proto3" json:"accessory_2,omitempty" bson:"accessory_2, omitempty"`
	Accessory_3 string `protobuf:"bytes,7,opt,name=accessory_3,json=accessory3,proto3" json:"accessory_3,omitempty" bson:"accessory_3, omitempty"`
}

func (x *Loadout) Reset() {
	*x = Loadout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Loadout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Loadout) ProtoMessage() {}

func (x *Loadout) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Loadout.ProtoReflect.Descriptor instead.
func (*Loadout) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{2}
}

func (x *Loadout) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

func (x *Loadout) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Loadout) GetFeet() string {
	if x != nil {
		return x.Feet
	}
	return ""
}

func (x *Loadout) GetWeapon() string {
	if x != nil {
		return x.Weapon
	}
	return ""
}

func (x *Loadout) GetAccessory_1() string {
	if x != nil {
		return x.Accessory_1
	}
	return ""
}

func (x *Loadout) GetAccessory_2() string {
	if x != nil {
		return x.Accessory_2
	}
	return ""
}

func (x *Loadout) GetAccessory_3() string {
	if x != nil {
		return x.Accessory_3
	}
	return ""
}

type Purse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bits float32 `protobuf:"fixed32,1,opt,name=bits,proto3" json:"bits,omitempty" default:"0" bson:"bits, omitempty"`
}

func (x *Purse) Reset() {
	*x = Purse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Purse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Purse) ProtoMessage() {}

func (x *Purse) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Purse.ProtoReflect.Descriptor instead.
func (*Purse) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{3}
}

func (x *Purse) GetBits() float32 {
	if x != nil {
		return x.Bits
	}
	return 0
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectID    string  `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty" bson:"_id, omitempty"`
	ItemId      string  `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty" bson:"item_id, omitempty"`
	ItemType    string  `protobuf:"bytes,3,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty" bson:"item_type, omitempty"`
	ItemSubtype string  `protobuf:"bytes,4,opt,name=item_subtype,json=itemSubtype,proto3" json:"item_subtype,omitempty" bson:"item_subtype, omitempty"`
	Entity      string  `protobuf:"bytes,5,opt,name=entity,proto3" json:"entity,omitempty" bson:"entity, omitempty"`
	Name        string  `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty" bson:"name, omitempty"`
	Num         int32   `protobuf:"varint,7,opt,name=num,proto3" json:"num,omitempty" bson:"num, omitempty"`
	Description string  `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty" bson:"description, omitempty"`
	Stats       *Stats  `protobuf:"bytes,9,opt,name=stats,proto3" json:"stats,omitempty" bson:"stats, omitempty"`
	BaseValue   float32 `protobuf:"fixed32,10,opt,name=base_value,json=baseValue,proto3" json:"base_value,omitempty" bson:"base_value, omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{4}
}

func (x *Item) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *Item) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *Item) GetItemType() string {
	if x != nil {
		return x.ItemType
	}
	return ""
}

func (x *Item) GetItemSubtype() string {
	if x != nil {
		return x.ItemSubtype
	}
	return ""
}

func (x *Item) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Item) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Item) GetBaseValue() float32 {
	if x != nil {
		return x.BaseValue
	}
	return 0
}

type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strength     float32 `protobuf:"fixed32,1,opt,name=strength,proto3" json:"strength,omitempty" default:"0" bson:"strength, omitempty"`
	Intelligence float32 `protobuf:"fixed32,2,opt,name=intelligence,proto3" json:"intelligence,omitempty" default:"0" bson:"intelligence, omitempty"`
	Dexterity    float32 `protobuf:"fixed32,3,opt,name=dexterity,proto3" json:"dexterity,omitempty" default:"0" bson:"dexterity, omitempty"`
	Charisma     float32 `protobuf:"fixed32,4,opt,name=charisma,proto3" json:"charisma,omitempty" default:"0" bson:"charisma, omitempty"`
	Luck         float32 `protobuf:"fixed32,5,opt,name=luck,proto3" json:"luck,omitempty" default:"0" bson:"luck, omitempty"`
	Health       float32 `protobuf:"fixed32,6,opt,name=health,proto3" json:"health,omitempty" default:"0" bson:"health, omitempty"`
	Mana         float32 `protobuf:"fixed32,7,opt,name=mana,proto3" json:"mana,omitempty" default:"0" bson:"mana, omitempty"`
	Attack       float32 `protobuf:"fixed32,8,opt,name=attack,proto3" json:"attack,omitempty" default:"0" bson:"attack, omitempty"`
	MagicAttack  float32 `protobuf:"fixed32,9,opt,name=magicAttack,proto3" json:"magicAttack,omitempty" default:"0" bson:"magicAttack, omitempty"`
	Defense      float32 `protobuf:"fixed32,10,opt,name=defense,proto3" json:"defense,omitempty" default:"0" bson:"defense, omitempty"`
	MagicDefense float32 `protobuf:"fixed32,11,opt,name=magicDefense,proto3" json:"magicDefense,omitempty" default:"0" bson:"magicDefense, omitempty"`
	Armor        float32 `protobuf:"fixed32,12,opt,name=armor,proto3" json:"armor,omitempty" default:"0" bson:"armor, omitempty"`
	Evasion      float32 `protobuf:"fixed32,13,opt,name=evasion,proto3" json:"evasion,omitempty" default:"0" bson:"evasion, omitempty"`
	Accuracy     float32 `protobuf:"fixed32,14,opt,name=accuracy,proto3" json:"accuracy,omitempty" default:"0" bson:"accuracy, omitempty"`
	Agility      float32 `protobuf:"fixed32,15,opt,name=agility,proto3" json:"agility,omitempty" default:"0" bson:"agility, omitempty"`
	FireRes      float32 `protobuf:"fixed32,16,opt,name=fireRes,proto3" json:"fireRes,omitempty" default:"0" bson:"fireRes, omitempty"`
	WaterRes     float32 `protobuf:"fixed32,17,opt,name=waterRes,proto3" json:"waterRes,omitempty" default:"0" bson:"waterRes, omitempty"`
	EarthRes     float32 `protobuf:"fixed32,18,opt,name=earthRes,proto3" json:"earthRes,omitempty" default:"0" bson:"earthRes, omitempty"`
	WindRes      float32 `protobuf:"fixed32,19,opt,name=windRes,proto3" json:"windRes,omitempty" default:"0" bson:"windRes, omitempty"`
	IceRes       float32 `protobuf:"fixed32,20,opt,name=iceRes,proto3" json:"iceRes,omitempty" default:"0" bson:"iceRes, omitempty"`
	EnergyRes    float32 `protobuf:"fixed32,21,opt,name=energyRes,proto3" json:"energyRes,omitempty" default:"0" bson:"energyRes, omitempty"`
	NatureRes    float32 `protobuf:"fixed32,22,opt,name=natureRes,proto3" json:"natureRes,omitempty" default:"0" bson:"natureRes, omitempty"`
	PoisonRes    float32 `protobuf:"fixed32,23,opt,name=poisonRes,proto3" json:"poisonRes,omitempty" default:"0" bson:"poisonRes, omitempty"`
	MetalRes     float32 `protobuf:"fixed32,24,opt,name=metalRes,proto3" json:"metalRes,omitempty" default:"0" bson:"metalRes, omitempty"`
	LightRes     float32 `protobuf:"fixed32,25,opt,name=lightRes,proto3" json:"lightRes,omitempty" default:"0" bson:"lightRes, omitempty"`
	DarkRes      float32 `protobuf:"fixed32,26,opt,name=darkRes,proto3" json:"darkRes,omitempty" default:"0" bson:"darkRes, omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{5}
}

func (x *Stats) GetStrength() float32 {
	if x != nil {
		return x.Strength
	}
	return 0
}

func (x *Stats) GetIntelligence() float32 {
	if x != nil {
		return x.Intelligence
	}
	return 0
}

func (x *Stats) GetDexterity() float32 {
	if x != nil {
		return x.Dexterity
	}
	return 0
}

func (x *Stats) GetCharisma() float32 {
	if x != nil {
		return x.Charisma
	}
	return 0
}

func (x *Stats) GetLuck() float32 {
	if x != nil {
		return x.Luck
	}
	return 0
}

func (x *Stats) GetHealth() float32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *Stats) GetMana() float32 {
	if x != nil {
		return x.Mana
	}
	return 0
}

func (x *Stats) GetAttack() float32 {
	if x != nil {
		return x.Attack
	}
	return 0
}

func (x *Stats) GetMagicAttack() float32 {
	if x != nil {
		return x.MagicAttack
	}
	return 0
}

func (x *Stats) GetDefense() float32 {
	if x != nil {
		return x.Defense
	}
	return 0
}

func (x *Stats) GetMagicDefense() float32 {
	if x != nil {
		return x.MagicDefense
	}
	return 0
}

func (x *Stats) GetArmor() float32 {
	if x != nil {
		return x.Armor
	}
	return 0
}

func (x *Stats) GetEvasion() float32 {
	if x != nil {
		return x.Evasion
	}
	return 0
}

func (x *Stats) GetAccuracy() float32 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

func (x *Stats) GetAgility() float32 {
	if x != nil {
		return x.Agility
	}
	return 0
}

func (x *Stats) GetFireRes() float32 {
	if x != nil {
		return x.FireRes
	}
	return 0
}

func (x *Stats) GetWaterRes() float32 {
	if x != nil {
		return x.WaterRes
	}
	return 0
}

func (x *Stats) GetEarthRes() float32 {
	if x != nil {
		return x.EarthRes
	}
	return 0
}

func (x *Stats) GetWindRes() float32 {
	if x != nil {
		return x.WindRes
	}
	return 0
}

func (x *Stats) GetIceRes() float32 {
	if x != nil {
		return x.IceRes
	}
	return 0
}

func (x *Stats) GetEnergyRes() float32 {
	if x != nil {
		return x.EnergyRes
	}
	return 0
}

func (x *Stats) GetNatureRes() float32 {
	if x != nil {
		return x.NatureRes
	}
	return 0
}

func (x *Stats) GetPoisonRes() float32 {
	if x != nil {
		return x.PoisonRes
	}
	return 0
}

func (x *Stats) GetMetalRes() float32 {
	if x != nil {
		return x.MetalRes
	}
	return 0
}

func (x *Stats) GetLightRes() float32 {
	if x != nil {
		return x.LightRes
	}
	return 0
}

func (x *Stats) GetDarkRes() float32 {
	if x != nil {
		return x.DarkRes
	}
	return 0
}

type ItemRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection []string `protobuf:"bytes,1,rep,name=collection,proto3" json:"collection,omitempty" bson:"collection, omitempty"`
}

func (x *ItemRange) Reset() {
	*x = ItemRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemRange) ProtoMessage() {}

func (x *ItemRange) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemRange.ProtoReflect.Descriptor instead.
func (*ItemRange) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{6}
}

func (x *ItemRange) GetCollection() []string {
	if x != nil {
		return x.Collection
	}
	return nil
}

type ShopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty" bson:"uuid, omitempty"`
	ShopItem *Item   `protobuf:"bytes,2,opt,name=shop_item,json=shopItem,proto3" json:"shop_item,omitempty" bson:"shop_item, omitempty"`
	Price    float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty" bson:"price, omitempty"`
}

func (x *ShopItem) Reset() {
	*x = ShopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopItem) ProtoMessage() {}

func (x *ShopItem) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopItem.ProtoReflect.Descriptor instead.
func (*ShopItem) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{7}
}

func (x *ShopItem) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ShopItem) GetShopItem() *Item {
	if x != nil {
		return x.ShopItem
	}
	return nil
}

func (x *ShopItem) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type Spell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectID      string  `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty" bson:"_id, omitempty"`
	SpellId       string  `protobuf:"bytes,2,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty" bson:"spell_id, omitempty"`
	Name          string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" bson:"name, omitempty"`
	ManaCost      int32   `protobuf:"varint,4,opt,name=mana_cost,json=manaCost,proto3" json:"mana_cost,omitempty" bson:"mana_cost, omitempty"`
	SpellType     string  `protobuf:"bytes,5,opt,name=spell_type,json=spellType,proto3" json:"spell_type,omitempty" bson:"spell_type, omitempty"`
	Targetable    string  `protobuf:"bytes,6,opt,name=targetable,proto3" json:"targetable,omitempty" bson:"targetable, omitempty"`
	Spell         string  `protobuf:"bytes,7,opt,name=spell,proto3" json:"spell,omitempty" bson:"spell, omitempty"`
	Damage        int32   `protobuf:"varint,8,opt,name=damage,proto3" json:"damage,omitempty" bson:"damage, omitempty"`
	Element       string  `protobuf:"bytes,9,opt,name=element,proto3" json:"element,omitempty" bson:"element"`
	Level         int32   `protobuf:"varint,10,opt,name=level,proto3" json:"level,omitempty" bson:"level, omitempty"`
	SpellDuration int32   `protobuf:"varint,11,opt,name=spell_duration,json=spellDuration,proto3" json:"spell_duration,omitempty" bson:"spell_duration, omitempty"`
	InitBlock     int32   `protobuf:"varint,12,opt,name=init_block,json=initBlock,proto3" json:"init_block,omitempty" bson:"init_block, omitempty"`
	BlockCount    int32   `protobuf:"varint,13,opt,name=block_count,json=blockCount,proto3" json:"block_count,omitempty" bson:"block_count, omitempty"`
	Effect        *Effect `protobuf:"bytes,14,opt,name=effect,proto3" json:"effect,omitempty" bson:"effect, omitempty"`
}

func (x *Spell) Reset() {
	*x = Spell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spell) ProtoMessage() {}

func (x *Spell) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spell.ProtoReflect.Descriptor instead.
func (*Spell) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{8}
}

func (x *Spell) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *Spell) GetSpellId() string {
	if x != nil {
		return x.SpellId
	}
	return ""
}

func (x *Spell) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Spell) GetManaCost() int32 {
	if x != nil {
		return x.ManaCost
	}
	return 0
}

func (x *Spell) GetSpellType() string {
	if x != nil {
		return x.SpellType
	}
	return ""
}

func (x *Spell) GetTargetable() string {
	if x != nil {
		return x.Targetable
	}
	return ""
}

func (x *Spell) GetSpell() string {
	if x != nil {
		return x.Spell
	}
	return ""
}

func (x *Spell) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *Spell) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

func (x *Spell) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Spell) GetSpellDuration() int32 {
	if x != nil {
		return x.SpellDuration
	}
	return 0
}

func (x *Spell) GetInitBlock() int32 {
	if x != nil {
		return x.InitBlock
	}
	return 0
}

func (x *Spell) GetBlockCount() int32 {
	if x != nil {
		return x.BlockCount
	}
	return 0
}

func (x *Spell) GetEffect() *Effect {
	if x != nil {
		return x.Effect
	}
	return nil
}

type Effect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" bson:"name, omitempty"`
	EffectId       string `protobuf:"bytes,2,opt,name=effect_id,json=effectId,proto3" json:"effect_id,omitempty" bson:"effect_id, omitempty"`
	Element        string `protobuf:"bytes,3,opt,name=element,proto3" json:"element,omitempty" bson:"element, omitempty"`
	EffectType     string `protobuf:"bytes,4,opt,name=effect_type,json=effectType,proto3" json:"effect_type,omitempty" bson:"effect_type, omitempty"`
	BuffElement    string `protobuf:"bytes,5,opt,name=buff_element,json=buffElement,proto3" json:"buff_element,omitempty" bson:"buff_element, omitempty"`
	DebuffElement  string `protobuf:"bytes,6,opt,name=debuff_element,json=debuffElement,proto3" json:"debuff_element,omitempty" bson:"debuff_element, omitempty"`
	DamagePerCycle int32  `protobuf:"varint,7,opt,name=damage_per_cycle,json=damagePerCycle,proto3" json:"damage_per_cycle,omitempty" bson:"damage_per_cycle, omitempty"`
	Lifetime       int32  `protobuf:"varint,8,opt,name=lifetime,proto3" json:"lifetime,omitempty" bson:"lifetime, omitempty"`
	TicksLeft      int32  `protobuf:"varint,9,opt,name=ticks_left,json=ticksLeft,proto3" json:"ticks_left,omitempty" bson:"ticks_left, omitempty"`
	Scalar         int32  `protobuf:"varint,10,opt,name=scalar,proto3" json:"scalar,omitempty" bson:"scalar, omitempty"`
	Description    string `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty" bson:"description, omitempty"`
	Effector       string `protobuf:"bytes,12,opt,name=effector,proto3" json:"effector,omitempty" bson:"effector, omitempty"`
}

func (x *Effect) Reset() {
	*x = Effect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Effect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Effect) ProtoMessage() {}

func (x *Effect) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Effect.ProtoReflect.Descriptor instead.
func (*Effect) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{9}
}

func (x *Effect) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Effect) GetEffectId() string {
	if x != nil {
		return x.EffectId
	}
	return ""
}

func (x *Effect) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

func (x *Effect) GetEffectType() string {
	if x != nil {
		return x.EffectType
	}
	return ""
}

func (x *Effect) GetBuffElement() string {
	if x != nil {
		return x.BuffElement
	}
	return ""
}

func (x *Effect) GetDebuffElement() string {
	if x != nil {
		return x.DebuffElement
	}
	return ""
}

func (x *Effect) GetDamagePerCycle() int32 {
	if x != nil {
		return x.DamagePerCycle
	}
	return 0
}

func (x *Effect) GetLifetime() int32 {
	if x != nil {
		return x.Lifetime
	}
	return 0
}

func (x *Effect) GetTicksLeft() int32 {
	if x != nil {
		return x.TicksLeft
	}
	return 0
}

func (x *Effect) GetScalar() int32 {
	if x != nil {
		return x.Scalar
	}
	return 0
}

func (x *Effect) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Effect) GetEffector() string {
	if x != nil {
		return x.Effector
	}
	return ""
}

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string    `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty" bson:"uuid, omitempty"`
	ConnectTime   string    `protobuf:"bytes,2,opt,name=connect_time,json=connectTime,proto3" json:"connect_time,omitempty" bson:"connect_time, omitempty"`
	UdpAddr       string    `protobuf:"bytes,3,opt,name=udp_addr,json=udpAddr,proto3" json:"udp_addr,omitempty" bson:"udp_addr, omitempty"`
	BroadcastAddr string    `protobuf:"bytes,4,opt,name=broadcast_addr,json=broadcastAddr,proto3" json:"broadcast_addr,omitempty" bson:"broadcast_addr, omitempty"`
	Position      *Position `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty" bson:"position, omitempty"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{10}
}

func (x *Client) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Client) GetConnectTime() string {
	if x != nil {
		return x.ConnectTime
	}
	return ""
}

func (x *Client) GetUdpAddr() string {
	if x != nil {
		return x.UdpAddr
	}
	return ""
}

func (x *Client) GetBroadcastAddr() string {
	if x != nil {
		return x.BroadcastAddr
	}
	return ""
}

func (x *Client) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosX float32 `protobuf:"fixed32,1,opt,name=pos_x,json=posX,proto3" json:"pos_x,omitempty" bson:"pos_x, omitempty"`
	PosY float32 `protobuf:"fixed32,2,opt,name=pos_y,json=posY,proto3" json:"pos_y,omitempty" bson:"pos_y, omitempty"`
	PosZ float32 `protobuf:"fixed32,3,opt,name=pos_z,json=posZ,proto3" json:"pos_z,omitempty" bson:"pos_z, omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{11}
}

func (x *Position) GetPosX() float32 {
	if x != nil {
		return x.PosX
	}
	return 0
}

func (x *Position) GetPosY() float32 {
	if x != nil {
		return x.PosY
	}
	return 0
}

func (x *Position) GetPosZ() float32 {
	if x != nil {
		return x.PosZ
	}
	return 0
}

type BattlePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleId        string     `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty" bson:"battle_id, omitempty"`
	PlayerProfile   *Profile   `protobuf:"bytes,2,opt,name=player_profile,json=playerProfile,proto3" json:"player_profile,omitempty" bson:"player_profile, omitempty"`
	Monsters        []*Monster `protobuf:"bytes,3,rep,name=monsters,proto3" json:"monsters,omitempty" bson:"monsters, omitempty"`
	MonsterQuantity int32      `protobuf:"varint,4,opt,name=monster_quantity,json=monsterQuantity,proto3" json:"monster_quantity,omitempty" default:"0" bson:"monster_quantity, omitempty"`
}

func (x *BattlePacket) Reset() {
	*x = BattlePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattlePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattlePacket) ProtoMessage() {}

func (x *BattlePacket) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattlePacket.ProtoReflect.Descriptor instead.
func (*BattlePacket) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{12}
}

func (x *BattlePacket) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *BattlePacket) GetPlayerProfile() *Profile {
	if x != nil {
		return x.PlayerProfile
	}
	return nil
}

func (x *BattlePacket) GetMonsters() []*Monster {
	if x != nil {
		return x.Monsters
	}
	return nil
}

func (x *BattlePacket) GetMonsterQuantity() int32 {
	if x != nil {
		return x.MonsterQuantity
	}
	return 0
}

type LoginSecretPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserData      *User    `protobuf:"bytes,1,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty" bson:"user_data, omitempty"`
	PlayerProfile *Profile `protobuf:"bytes,2,opt,name=player_profile,json=playerProfile,proto3" json:"player_profile,omitempty" bson:"player_profile, omitempty"`
	RegionData    *Region  `protobuf:"bytes,3,opt,name=region_data,json=regionData,proto3" json:"region_data,omitempty" bson:"region_data, omitempty"`
}

func (x *LoginSecretPacket) Reset() {
	*x = LoginSecretPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginSecretPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginSecretPacket) ProtoMessage() {}

func (x *LoginSecretPacket) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginSecretPacket.ProtoReflect.Descriptor instead.
func (*LoginSecretPacket) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{13}
}

func (x *LoginSecretPacket) GetUserData() *User {
	if x != nil {
		return x.UserData
	}
	return nil
}

func (x *LoginSecretPacket) GetPlayerProfile() *Profile {
	if x != nil {
		return x.PlayerProfile
	}
	return nil
}

func (x *LoginSecretPacket) GetRegionData() *Region {
	if x != nil {
		return x.RegionData
	}
	return nil
}

type Region struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectID   string   `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty" bson:"_id, omitempty"`
	RegionId   string   `protobuf:"bytes,2,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty" bson:"region_id, omitempty"`
	RegionName string   `protobuf:"bytes,3,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty" bson:"region_name, omitempty"`
	Levels     []string `protobuf:"bytes,4,rep,name=levels,proto3" json:"levels,omitempty" bson:"levels, omitempty"`
}

func (x *Region) Reset() {
	*x = Region{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Region) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Region) ProtoMessage() {}

func (x *Region) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Region.ProtoReflect.Descriptor instead.
func (*Region) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{14}
}

func (x *Region) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *Region) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *Region) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *Region) GetLevels() []string {
	if x != nil {
		return x.Levels
	}
	return nil
}

type Level struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectID  string   `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty" bson:"_id, omitempty"`
	LevelId   string   `protobuf:"bytes,2,opt,name=level_id,json=levelId,proto3" json:"level_id,omitempty" bson:"_id, omitempty"`
	LevelName string   `protobuf:"bytes,3,opt,name=level_name,json=levelName,proto3" json:"level_name,omitempty" bson:"_id, omitempty"`
	Zip       string   `protobuf:"bytes,4,opt,name=zip,proto3" json:"zip,omitempty" bson:"_id, omitempty"`
	Monsters  []string `protobuf:"bytes,5,rep,name=monsters,proto3" json:"monsters,omitempty" bson:"_id, omitempty"`
	Residents []string `protobuf:"bytes,6,rep,name=residents,proto3" json:"residents,omitempty" bson:"_id, omitempty"`
}

func (x *Level) Reset() {
	*x = Level{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Level) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Level) ProtoMessage() {}

func (x *Level) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Level.ProtoReflect.Descriptor instead.
func (*Level) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{15}
}

func (x *Level) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *Level) GetLevelId() string {
	if x != nil {
		return x.LevelId
	}
	return ""
}

func (x *Level) GetLevelName() string {
	if x != nil {
		return x.LevelName
	}
	return ""
}

func (x *Level) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *Level) GetMonsters() []string {
	if x != nil {
		return x.Monsters
	}
	return nil
}

func (x *Level) GetResidents() []string {
	if x != nil {
		return x.Residents
	}
	return nil
}

type Resident struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectID string   `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty" bson:"_id, omitempty"`
	NpcId    string   `protobuf:"bytes,2,opt,name=npc_id,json=npcId,proto3" json:"npc_id,omitempty" bson:"npcID, omitempty"`
	NpcName  string   `protobuf:"bytes,3,opt,name=npc_name,json=npcName,proto3" json:"npc_name,omitempty" bson:"npcName, omitempty"`
	Dialogue []string `protobuf:"bytes,4,rep,name=dialogue,proto3" json:"dialogue,omitempty"`
}

func (x *Resident) Reset() {
	*x = Resident{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resident) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resident) ProtoMessage() {}

func (x *Resident) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resident.ProtoReflect.Descriptor instead.
func (*Resident) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{16}
}

func (x *Resident) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *Resident) GetNpcId() string {
	if x != nil {
		return x.NpcId
	}
	return ""
}

func (x *Resident) GetNpcName() string {
	if x != nil {
		return x.NpcName
	}
	return ""
}

func (x *Resident) GetDialogue() []string {
	if x != nil {
		return x.Dialogue
	}
	return nil
}

type ShopKeeper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectID  string      `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty" bson:"_id, omitempty"`
	NpcId     string      `protobuf:"bytes,2,opt,name=npc_id,json=npcId,proto3" json:"npc_id,omitempty" bson:"npcID, omitempty"`
	Catalogue []*ShopItem `protobuf:"bytes,3,rep,name=catalogue,proto3" json:"catalogue,omitempty" bson:"catalogue, omitempty"`
	Purse     *Purse      `protobuf:"bytes,4,opt,name=purse,proto3" json:"purse,omitempty" bson:"purse, omitempty"`
}

func (x *ShopKeeper) Reset() {
	*x = ShopKeeper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopKeeper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopKeeper) ProtoMessage() {}

func (x *ShopKeeper) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopKeeper.ProtoReflect.Descriptor instead.
func (*ShopKeeper) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{17}
}

func (x *ShopKeeper) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *ShopKeeper) GetNpcId() string {
	if x != nil {
		return x.NpcId
	}
	return ""
}

func (x *ShopKeeper) GetCatalogue() []*ShopItem {
	if x != nil {
		return x.Catalogue
	}
	return nil
}

func (x *ShopKeeper) GetPurse() *Purse {
	if x != nil {
		return x.Purse
	}
	return nil
}

type Monster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectID       string   `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty" bson:"_id, omitempty"`
	MobId          string   `protobuf:"bytes,2,opt,name=mob_id,json=mobId,proto3" json:"mob_id,omitempty" bson:"mobID, omitempty"`
	MonsterType    string   `protobuf:"bytes,3,opt,name=monster_type,json=monsterType,proto3" json:"monster_type,omitempty" bson:"monsterType, omitempty"`
	GoldGain       int32    `protobuf:"varint,4,opt,name=gold_gain,json=goldGain,proto3" json:"gold_gain,omitempty" bson:"goldGain, omitempty"`
	ExperienceGain int32    `protobuf:"varint,5,opt,name=experience_gain,json=experienceGain,proto3" json:"experience_gain,omitempty" bson:"experienceGain, omitempty"`
	Profile        *Profile `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty" bson:"mobVitals, omitempty"`
	Stats          *Stats   `protobuf:"bytes,7,opt,name=stats,proto3" json:"stats,omitempty" bson:"stats, omitempty"`
	Actions        []*Spell `protobuf:"bytes,8,rep,name=actions,proto3" json:"actions,omitempty" bson:"attackActions, omitempty"`
	Element        string   `protobuf:"bytes,9,opt,name=element,proto3" json:"element,omitempty" bson:"element, omitempty"`
	Regions        []string `protobuf:"bytes,10,rep,name=regions,proto3" json:"regions,omitempty" bson:"regions, omitempty"`
}

func (x *Monster) Reset() {
	*x = Monster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Monster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monster) ProtoMessage() {}

func (x *Monster) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monster.ProtoReflect.Descriptor instead.
func (*Monster) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{18}
}

func (x *Monster) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *Monster) GetMobId() string {
	if x != nil {
		return x.MobId
	}
	return ""
}

func (x *Monster) GetMonsterType() string {
	if x != nil {
		return x.MonsterType
	}
	return ""
}

func (x *Monster) GetGoldGain() int32 {
	if x != nil {
		return x.GoldGain
	}
	return 0
}

func (x *Monster) GetExperienceGain() int32 {
	if x != nil {
		return x.ExperienceGain
	}
	return 0
}

func (x *Monster) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Monster) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Monster) GetActions() []*Spell {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *Monster) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

func (x *Monster) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

type RegionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region    *Region    `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty" bson:"region, omitempty"`
	LevelData *LevelData `protobuf:"bytes,2,opt,name=level_data,json=levelData,proto3" json:"level_data,omitempty" bson:"level, omitempty"`
}

func (x *RegionData) Reset() {
	*x = RegionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionData) ProtoMessage() {}

func (x *RegionData) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionData.ProtoReflect.Descriptor instead.
func (*RegionData) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{19}
}

func (x *RegionData) GetRegion() *Region {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *RegionData) GetLevelData() *LevelData {
	if x != nil {
		return x.LevelData
	}
	return nil
}

type LevelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level     *Level      `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty" bson:"level, omitempty"`
	Residents []*Resident `protobuf:"bytes,2,rep,name=residents,proto3" json:"residents,omitempty" bson:"residents"`
}

func (x *LevelData) Reset() {
	*x = LevelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelData) ProtoMessage() {}

func (x *LevelData) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelData.ProtoReflect.Descriptor instead.
func (*LevelData) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{20}
}

func (x *LevelData) GetLevel() *Level {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *LevelData) GetResidents() []*Resident {
	if x != nil {
		return x.Residents
	}
	return nil
}

type Sessions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleSessions map[string]*BattleSession `protobuf:"bytes,1,rep,name=battle_sessions,json=battleSessions,proto3" json:"battle_sessions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"battle_sessions, omitempty"`
}

func (x *Sessions) Reset() {
	*x = Sessions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sessions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sessions) ProtoMessage() {}

func (x *Sessions) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sessions.ProtoReflect.Descriptor instead.
func (*Sessions) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{21}
}

func (x *Sessions) GetBattleSessions() map[string]*BattleSession {
	if x != nil {
		return x.BattleSessions
	}
	return nil
}

type BattleSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleId     string     `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty" bson:"battle_id, omitempty"`
	Status       int32      `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty" default:"0" bson:"status, omitempty"`
	Monsters     []*Monster `protobuf:"bytes,3,rep,name=monsters,proto3" json:"monsters,omitempty" bson:"monsters, omitempty"`
	RewardMatrix []int32    `protobuf:"varint,4,rep,packed,name=reward_matrix,json=rewardMatrix,proto3" json:"reward_matrix,omitempty" bson:"reward_matrix, omitempty"`
	Reward       *Reward    `protobuf:"bytes,5,opt,name=reward,proto3" json:"reward,omitempty" bson:"reward, omitempty"`
}

func (x *BattleSession) Reset() {
	*x = BattleSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleSession) ProtoMessage() {}

func (x *BattleSession) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleSession.ProtoReflect.Descriptor instead.
func (*BattleSession) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{22}
}

func (x *BattleSession) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *BattleSession) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BattleSession) GetMonsters() []*Monster {
	if x != nil {
		return x.Monsters
	}
	return nil
}

func (x *BattleSession) GetRewardMatrix() []int32 {
	if x != nil {
		return x.RewardMatrix
	}
	return nil
}

func (x *BattleSession) GetReward() *Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

type Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gold     float32 `protobuf:"fixed32,1,opt,name=gold,proto3" json:"gold,omitempty" default:"0" bson:"gold, omitempty"`
	Exp      float32 `protobuf:"fixed32,2,opt,name=exp,proto3" json:"exp,omitempty" default:"0" bson:"exp, omitempty"`
	TotalExp float32 `protobuf:"fixed32,3,opt,name=total_exp,json=totalExp,proto3" json:"total_exp,omitempty" default:"0" bson:"total_exp, omitempty"`
}

func (x *Reward) Reset() {
	*x = Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

func (x *Reward) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{23}
}

func (x *Reward) GetGold() float32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *Reward) GetExp() float32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *Reward) GetTotalExp() float32 {
	if x != nil {
		return x.TotalExp
	}
	return 0
}

type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty" bson:"packet_id, omitempty"`
	PacketCode  string `protobuf:"bytes,2,opt,name=packet_code,json=packetCode,proto3" json:"packet_code,omitempty" bson:"packet_code, omitempty"`
	Chain       bool   `protobuf:"varint,3,opt,name=chain,proto3" json:"chain,omitempty" bson:"chain, omitempty"`
	ServiceType string `protobuf:"bytes,4,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty" bson:"service_type, omitempty"`
	Content     string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty" bson:"content, omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{24}
}

func (x *Packet) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Packet) GetPacketCode() string {
	if x != nil {
		return x.PacketCode
	}
	return ""
}

func (x *Packet) GetChain() bool {
	if x != nil {
		return x.Chain
	}
	return false
}

func (x *Packet) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *Packet) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type PlayerPacketCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketCache map[string]*Packet `protobuf:"bytes,1,rep,name=packet_cache,json=packetCache,proto3" json:"packet_cache,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"packet_cache, omitempty"`
}

func (x *PlayerPacketCache) Reset() {
	*x = PlayerPacketCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameobjects_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerPacketCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPacketCache) ProtoMessage() {}

func (x *PlayerPacketCache) ProtoReflect() protoreflect.Message {
	mi := &file_gameobjects_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPacketCache.ProtoReflect.Descriptor instead.
func (*PlayerPacketCache) Descriptor() ([]byte, []int) {
	return file_gameobjects_proto_rawDescGZIP(), []int{25}
}

func (x *PlayerPacketCache) GetPacketCache() map[string]*Packet {
	if x != nil {
		return x.PacketCache
	}
	return nil
}

var File_gameobjects_proto protoreflect.FileDescriptor

var file_gameobjects_proto_rawDesc = []byte{
	0x0a, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x9b, 0x01, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x22, 0xcc, 0x05, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x65, 0x78, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x65, 0x78, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x78, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x70, 0x75, 0x72, 0x73,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x05, 0x70, 0x75, 0x72, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x6c,
	0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x52, 0x07, 0x6c, 0x6f, 0x61,
	0x64, 0x6f, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x16, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x61, 0x64, 0x6f,
	0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x65,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x65, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x79, 0x5f, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x79, 0x5f, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x79, 0x5f, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x33, 0x22, 0x1b, 0x0a, 0x05, 0x50, 0x75, 0x72,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x62, 0x69, 0x74, 0x73, 0x22, 0x9d, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x75, 0x62,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e,
	0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x62, 0x61, 0x73,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xcf, 0x05, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x78, 0x74, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x64, 0x65, 0x78, 0x74, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x68, 0x61, 0x72, 0x69, 0x73, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x69, 0x73, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x75,
	0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x75, 0x63, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6e, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6d, 0x61, 0x6e, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x44, 0x65, 0x66, 0x65, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x61, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x65, 0x76, 0x61, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x67, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x61, 0x67, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x66, 0x69, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x77, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x61, 0x72, 0x74, 0x68, 0x52, 0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x65, 0x61, 0x72, 0x74, 0x68, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x77, 0x69, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x69, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x6f, 0x69,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x64, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x99, 0x03, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70,
	0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70,
	0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x6e,
	0x61, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61,
	0x6e, 0x61, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x65, 0x6c,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x70, 0x65,
	0x6c, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e,
	0x69, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x69, 0x6e, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x22, 0xf9, 0x02, 0x0a, 0x06, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x66, 0x66, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x75, 0x66, 0x66, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65,
	0x62, 0x75, 0x66, 0x66, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x66, 0x66, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c,
	0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x73,
	0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x63,
	0x6b, 0x73, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0xad, 0x01, 0x0a,
	0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x64, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x64, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x2a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x08,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x5f,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x58, 0x12, 0x13, 0x0a,
	0x05, 0x70, 0x6f, 0x73, 0x5f, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x6f,
	0x73, 0x59, 0x12, 0x13, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x5f, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x5a, 0x22, 0xb7, 0x01, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0d, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x6d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x34, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x73, 0x22, 0xa9, 0x01, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x7a, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x74, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x70, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x70, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x70, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x75, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x70, 0x4b, 0x65, 0x65, 0x70,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x15,
	0x0a, 0x06, 0x6e, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x70, 0x63, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x70, 0x75, 0x72, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x05, 0x70, 0x75, 0x72, 0x73, 0x65, 0x22, 0xcc, 0x02, 0x0a, 0x07, 0x4d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x15,
	0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x6c, 0x64,
	0x5f, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x6f, 0x6c,
	0x64, 0x47, 0x61, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x69, 0x6e, 0x12, 0x27,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x62, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0a, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5c, 0x0a, 0x09, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x09, 0x72, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x08, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x0f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x56, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xba, 0x01, 0x0a, 0x0d, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x08, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x4b, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04,
	0x67, 0x6f, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x78, 0x70, 0x22, 0x90, 0x01, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x4b, 0x0a, 0x0c,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x1a, 0x4c, 0x0a, 0x10, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gameobjects_proto_rawDescOnce sync.Once
	file_gameobjects_proto_rawDescData = file_gameobjects_proto_rawDesc
)

func file_gameobjects_proto_rawDescGZIP() []byte {
	file_gameobjects_proto_rawDescOnce.Do(func() {
		file_gameobjects_proto_rawDescData = protoimpl.X.CompressGZIP(file_gameobjects_proto_rawDescData)
	})
	return file_gameobjects_proto_rawDescData
}

var file_gameobjects_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_gameobjects_proto_goTypes = []interface{}{
	(*User)(nil),              // 0: main.User
	(*Profile)(nil),           // 1: main.Profile
	(*Loadout)(nil),           // 2: main.Loadout
	(*Purse)(nil),             // 3: main.Purse
	(*Item)(nil),              // 4: main.Item
	(*Stats)(nil),             // 5: main.Stats
	(*ItemRange)(nil),         // 6: main.ItemRange
	(*ShopItem)(nil),          // 7: main.ShopItem
	(*Spell)(nil),             // 8: main.Spell
	(*Effect)(nil),            // 9: main.Effect
	(*Client)(nil),            // 10: main.Client
	(*Position)(nil),          // 11: main.Position
	(*BattlePacket)(nil),      // 12: main.BattlePacket
	(*LoginSecretPacket)(nil), // 13: main.LoginSecretPacket
	(*Region)(nil),            // 14: main.Region
	(*Level)(nil),             // 15: main.Level
	(*Resident)(nil),          // 16: main.Resident
	(*ShopKeeper)(nil),        // 17: main.ShopKeeper
	(*Monster)(nil),           // 18: main.Monster
	(*RegionData)(nil),        // 19: main.RegionData
	(*LevelData)(nil),         // 20: main.LevelData
	(*Sessions)(nil),          // 21: main.Sessions
	(*BattleSession)(nil),     // 22: main.BattleSession
	(*Reward)(nil),            // 23: main.Reward
	(*Packet)(nil),            // 24: main.Packet
	(*PlayerPacketCache)(nil), // 25: main.PlayerPacketCache
	nil,                       // 26: main.Sessions.BattleSessionsEntry
	nil,                       // 27: main.PlayerPacketCache.PacketCacheEntry
}
var file_gameobjects_proto_depIdxs = []int32{
	11, // 0: main.Profile.last_position:type_name -> main.Position
	6,  // 1: main.Profile.items:type_name -> main.ItemRange
	3,  // 2: main.Profile.purse:type_name -> main.Purse
	2,  // 3: main.Profile.loadout:type_name -> main.Loadout
	5,  // 4: main.Profile.stats:type_name -> main.Stats
	5,  // 5: main.Profile.base_stats:type_name -> main.Stats
	5,  // 6: main.Item.stats:type_name -> main.Stats
	4,  // 7: main.ShopItem.shop_item:type_name -> main.Item
	9,  // 8: main.Spell.effect:type_name -> main.Effect
	11, // 9: main.Client.position:type_name -> main.Position
	1,  // 10: main.BattlePacket.player_profile:type_name -> main.Profile
	18, // 11: main.BattlePacket.monsters:type_name -> main.Monster
	0,  // 12: main.LoginSecretPacket.user_data:type_name -> main.User
	1,  // 13: main.LoginSecretPacket.player_profile:type_name -> main.Profile
	14, // 14: main.LoginSecretPacket.region_data:type_name -> main.Region
	7,  // 15: main.ShopKeeper.catalogue:type_name -> main.ShopItem
	3,  // 16: main.ShopKeeper.purse:type_name -> main.Purse
	1,  // 17: main.Monster.profile:type_name -> main.Profile
	5,  // 18: main.Monster.stats:type_name -> main.Stats
	8,  // 19: main.Monster.actions:type_name -> main.Spell
	14, // 20: main.RegionData.region:type_name -> main.Region
	20, // 21: main.RegionData.level_data:type_name -> main.LevelData
	15, // 22: main.LevelData.level:type_name -> main.Level
	16, // 23: main.LevelData.residents:type_name -> main.Resident
	26, // 24: main.Sessions.battle_sessions:type_name -> main.Sessions.BattleSessionsEntry
	18, // 25: main.BattleSession.monsters:type_name -> main.Monster
	23, // 26: main.BattleSession.reward:type_name -> main.Reward
	27, // 27: main.PlayerPacketCache.packet_cache:type_name -> main.PlayerPacketCache.PacketCacheEntry
	22, // 28: main.Sessions.BattleSessionsEntry.value:type_name -> main.BattleSession
	24, // 29: main.PlayerPacketCache.PacketCacheEntry.value:type_name -> main.Packet
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_gameobjects_proto_init() }
func file_gameobjects_proto_init() {
	if File_gameobjects_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gameobjects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Loadout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Purse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Effect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattlePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginSecretPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Region); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Level); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resident); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopKeeper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Monster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sessions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameobjects_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerPacketCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gameobjects_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gameobjects_proto_goTypes,
		DependencyIndexes: file_gameobjects_proto_depIdxs,
		MessageInfos:      file_gameobjects_proto_msgTypes,
	}.Build()
	File_gameobjects_proto = out.File
	file_gameobjects_proto_rawDesc = nil
	file_gameobjects_proto_goTypes = nil
	file_gameobjects_proto_depIdxs = nil
}
